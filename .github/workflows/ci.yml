name: ci

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-20.04
        name: "python ${{ matrix.python-version }}"
        env:
          WAYLAND: 1.19.0
          WAYLAND_PROTOCOLS: 1.21
          WLROOTS: 0.14.0
          SEATD: 0.5.0
          LIBDRM: 2.4.105
        strategy:
            matrix:
                # if you change one of these, be sure to update
                # /tox.ini:[gh-actions] as well
                python-version: [pypy-3.7, 3.7, 3.8, 3.9]
        steps:
            - uses: actions/checkout@v2
            - name: Set up python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                sudo apt update
                sudo apt install --no-install-recommends \
                  libdbus-1-dev libgirepository1.0-dev gir1.2-gtk-3.0 gir1.2-notify-0.7 gir1.2-gudev-1.0 graphviz \
                  imagemagick libpulse-dev lm-sensors git xserver-xephyr xterm xvfb ninja-build libegl1-mesa-dev \
                  libgles2-mesa-dev libgbm-dev libinput-dev libxkbcommon-dev libpixman-1-dev libpciaccess-dev \
                  dbus-x11 libnotify-bin
                sudo pip -q install tox tox-gh-actions meson PyGObject
            - name: Build wayland
              run: |
                wget -q --no-check-certificate https://wayland.freedesktop.org/releases/wayland-$WAYLAND.tar.xz
                tar -xJf wayland-$WAYLAND.tar.xz
                cd wayland-$WAYLAND
                meson build -Ddocumentation=false --prefix=/usr
                ninja -C build
                sudo ninja -C build install
            - name: Build wayland-protocols
              run: |
                wget -q --no-check-certificate https://wayland.freedesktop.org/releases/wayland-protocols-$WAYLAND_PROTOCOLS.tar.xz
                tar -xJf wayland-protocols-$WAYLAND_PROTOCOLS.tar.xz
                cd wayland-protocols-$WAYLAND_PROTOCOLS
                meson build -Dtests=false --prefix=/usr
                ninja -C build
                sudo ninja -C build install
            - name: Build seatd
              run: |
                wget -q --no-check-certificate https://git.sr.ht/~kennylevinsen/seatd/archive/$SEATD.tar.gz
                tar -xzf $SEATD.tar.gz
                cd seatd-$SEATD
                meson build --prefix=/usr
                ninja -C build
                sudo ninja -C build install
            - name: Build libdrm
              run: |
                wget -q --no-check-certificate https://gitlab.freedesktop.org/mesa/drm/-/archive/libdrm-$LIBDRM/drm-libdrm-$LIBDRM.tar.gz
                tar -xzf drm-libdrm-$LIBDRM.tar.gz
                cd drm-libdrm-$LIBDRM
                meson build --prefix=/usr
                ninja -C build
                sudo ninja -C build install
            - name: Build wlroots
              run: |
                wget -q --no-check-certificate https://github.com/swaywm/wlroots/archive/$WLROOTS.tar.gz
                tar -xzf $WLROOTS.tar.gz
                cd wlroots-$WLROOTS
                meson build -Dexamples=false --prefix=/usr
                ninja -C build
                sudo ninja -C build install
            - name: run tests
              run: |
                [ "$(grep -c -P '\t' CHANGELOG)" = "0" ]
                tox

