name: ci

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-24.04
        name: "python ${{ matrix.python-version }} on ${{ matrix.backend }}"
        strategy:
            matrix:
                # If you change one of these, be sure to update:
                # - /pyproject.toml:[tool.mypy]
                # If adding new python versions, consider also updating
                # python version in .readthedocs.yaml
                # TODO: Add back pypy here and in release.yml once:
                # https://github.com/pypy/pypy/issues/4956 is resolved
                python-version: ['3.12', '3.13', '3.14']
                backend: ['x11', 'wayland']
        steps:
            - uses: actions/checkout@v4
            - name: Start httpbin container
              run: |
                docker run -d --name httpbin -p 8080:80 kennethreitz/httpbin
                timeout 30 bash -c 'until curl -s http://localhost:8080/get > /dev/null; do sleep 1; done'
            - name: Set up python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Cache uv
              id: cache-uv
              uses: actions/cache@v4
              with:
                  path: ~/.cargo/bin/uv
                  key: ${{ runner.os }}-uv-30-10-2025
            - name: Install uv
              if: steps.cache-uv.outputs.cache-hit != 'true'
              run: curl -LsSf https://astral.sh/uv/install.sh | sh
            - name: Install dependencies
              run: |
                sudo apt update
                sudo apt install yq
                sudo apt install -y --no-install-recommends $(yq -r '.build.apt_packages | join(" ")' .readthedocs.yaml)
                # Any Wayland-specific Ubuntu system dependencies should be installed from ./scripts/ubuntu_wayland_setup
            - name: Cache Wayland dependencies
              uses: actions/cache@v4
              with:
                path: cache
                key: ${{ runner.os }}-wayland-${{ hashFiles('scripts/ubuntu_wayland_setup') }}
                restore-keys: |
                  ${{ runner.os }}-wayland-
            - name: Install wayland
              run: bash -x ./scripts/ubuntu_wayland_setup
            - name: Clean python version and export to env
              shell: bash
              run: |
                PYTHON_VERSION="${{ matrix.python-version }}"
                CLEAN_VERSION="${PYTHON_VERSION%-dev}"
                echo "QTILE_CI_PYTHON=${CLEAN_VERSION}" >> $GITHUB_ENV
            - name: Run Tests
              run: |
                [ "$(grep -c -P '\t' CHANGELOG)" = "0" ]
                make QTILE_CI_PYTHON=${QTILE_CI_PYTHON} QTILE_CI_BACKEND=${{ matrix.backend }} check check-packaging
                uv run coverage combine -q
                uv run coverage report -m
                uv run coverage xml
            - name: Upload coverage data to coveralls.io
              continue-on-error: true
              run: |
                pip -q install coveralls >=3.3.0
                coveralls --service=github
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                COVERALLS_FLAG_NAME: ${{ format('{0}-{1}', matrix.python-version, matrix.backend) }}
                COVERALLS_PARALLEL: true
                COVERALLS_SERVICE_JOB_ID: ${{ github.run_id }}

    coverage:
        name: Finalize Coverage
        needs: build
        runs-on: ubuntu-24.04
        steps:
            - name: Coveralls Finished
              uses: coverallsapp/github-action@main
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                parallel-finished: true
